{"version":3,"sources":["components/ErrorBoundry.jsx","profiles.js","components/Donut.jsx","components/Dropdown.jsx","components/Menu.jsx","components/Clone.jsx","containers/App.jsx","reportWebVitals.js","index.jsx"],"names":["ErrorBoundry","props","state","hasError","error","infor","this","setState","className","children","Component","profiles","DonutChartCard","options","labels","data","map","x","label","colors","plotOptions","pie","expandOnClick","donut","show","name","fontSize","fontFamily","undefined","offsetY","total","totalLabel","color","formatter","w","globals","seriesTotals","reduce","a","b","legend","offsetX","markers","width","height","itemMargin","horizontal","dataLabels","enabled","series","value","style","type","Dropdown","LongMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","cloneCard","IconButton","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","selected","CloneBtn","inputEl","useRef","useEffect","current","addEventListener","once","ref","App","fetch","headers","then","response","json","console","log","length","Paper","elevation","title","Clone","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f91c33.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, infor){\n   this.setState({hasError: true})\n  }\n\n  render() {\n   if ( this.state.hasError) {\n     return <h1 className='tc f1'>Ooops. That is not good</h1>\n   } else {\n     return this.props.children;\n   }\n  }\n}\nexport default ErrorBoundry;\n","export const profiles = [{\n        \"title\": \"Gender\",\n        \"totalLabel\": \"Total Users\",\n        \"data\": [{\n                \"label\": \"Female\",\n                \"value\": 50\n            },\n            {\n                \"label\": \"Male\",\n                \"value\": 35\n            },\n            {\n                \"label\": \"Diverse\",\n                \"value\": 15\n            }\n        ]\n    },\n    {\n        \"title\": \"Age Range\",\n        \"totalLabel\": \"Total Users\",\n        \"data\": [{\n                \"label\": \"Below 25\",\n                \"value\": 20\n            },\n            {\n                \"label\": \"Between 25 and 40\",\n                \"value\": 67\n            },\n            {\n                \"label\": \"Above 40\",\n                \"value\": 13\n            }\n        ]\n    },\n    {\n        \"title\": \"Country\",\n        \"totalLabel\": \"Total Users\",\n        \"data\": [{\n                \"label\": \"Costa Rica\",\n                \"value\": 22\n            },\n            {\n                \"label\": \"India\",\n                \"value\": 37\n            },\n            {\n                \"label\": \"Canada\",\n                \"value\": 41\n            }\n        ]\n    }\n]","import React, { Component } from 'react';\nimport ApexChart from \"react-apexcharts\";\nimport { profiles } from '../profiles';\nimport '../stylesheets/Donut.css';\n\nclass DonutChartCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n                labels: profiles[0].data.map((x)=>{return x.label}),\n                colors:['#F44336', '#E91E63', '#9C27B0'],\n                plotOptions: {\n                  pie: {\n                    expandOnClick: false,\n                    donut: {\n                      labels: {\n                        show: true,\n                        name: {\n                          show: true,\n                          fontSize: \"12px\",\n                          fontFamily: undefined,\n                          offsetY: 0\n                        },\n\n                        total: {\n                          show: true,\n                          label: profiles[0].totalLabel,\n                          color: \"#999999\",\n                          formatter: (w) => {\n                            return w.globals.seriesTotals.reduce((a, b) => { return a + b; }, 0);\n                          }\n                        }\n                      }\n                    }\n                 }\n               },\n               legend: {\n                 offsetY: 25,\n                 offsetX:0\n                },\n               markers: {\n                   width: 10,\n                   height: 10,\n                   colors: ['#063760', '#E91E63', '#9C27B0']\n               },\n               itemMargin: {\n                   horizontal: 10\n              },\n              dataLabels: {\n                enabled: false\n              }\n      },\n      series: profiles[0].data.map((x)=>{return x.value})\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div style={{ height: \"200px\" }}>\n        <ApexChart\n          options={this.state.options}\n          series={this.state.series}\n          type=\"donut\"\n          width='500'\n        />\n      </div>\n    );\n  }\n}\nexport default DonutChartCard;\n","import { useState } from \"react\";\nfunction Dropdown({ selected, setSelected }) {\n  const [isActive, setIsActive] = useState(false);\n  const options = [\"Clone\"];\n  return (\n    <div className=\"dropdown\">\n      <div className=\"dropdown-btn\" onClick={(e) => setIsActive(!isActive)}>\n        {selected}\n        <span className=\"fas fa-caret-down\"></span>\n      </div>\n      {isActive && (\n        <div className=\"dropdown-content\">\n          {options.map((option) => (\n            <div\n              onClick={(e) => {\n                setSelected(option);\n                setIsActive(false);\n              }}\n              className=\"dropdown-item\"\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React, {useEffect, useRef, useState} from 'react';\nimport DonutChartCard from './Donut';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst options = [\n  'Clone'\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const cloneCard = () => {\n    return (\n      <div>\n        <h2>Lalalala</h2>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n          },\n        }}\n      >\n        {options.map((option) => (\n          <MenuItem key={option} selected={option === 'Clone'} onClick={cloneCard}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport DonutChartCard from './Donut';\nimport '../stylesheets/button.css';\nimport '../stylesheets/dropdown.css';\nimport Dropdown from './Dropdown';\nimport LongMenu from './Menu';\n\n\nconst CloneBtn = () => {\n  const inputEl = useRef();\n  const cloneCard = () =>{\n    return (\n      <div>\n        <DonutChartCard />\n      </div>\n    );\n  }\n  // Wait for DOM to load\n  useEffect(() => {\n                    inputEl.current.addEventListener( 'click',\n                                                       cloneCard(),\n                                                       { once: true }\n                                                    )\n                  });\n  // const [selected, setSelected] = useState(\"&#xFE19\");\n  return (\n          <div >\n            <button ref={inputEl} className='button' >\n              &#xFE19;\n            </button>\n            {/* <div class=\"dropdown\">\n              <ul>\n                <li>Clone</li>\n              </ul>\n            </div> */}\n            {/* <Dropdown selected={selected} setSelected={setSelected} /> */}\n            <LongMenu/>\n          </div>\n        );\n}\nexport default CloneBtn;\n","import React from \"react\";\n//import DonutChartCard from \"../components/Donut\";\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { profiles } from '../profiles';\nimport ApexChart from \"react-apexcharts\";\nimport { Paper } from \"@material-ui/core\";\nimport CloneBtn from '../components/Clone';\nimport '../stylesheets/App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      profiles:[],\n      options: {\n                labels: profiles[0].data.map((x)=>{return x.label}),\n                colors:['#692870', '#C0406B', '#F08F62'],\n                plotOptions: {\n                  pie: {\n                    expandOnClick: false,\n                    donut: {\n                      labels: {\n                        show: true,\n                        name: {\n                          show: true,\n                          fontSize: \"12px\",\n                          fontFamily: undefined,\n                          offsetY: 0\n                        },\n\n                        total: {\n                          show: true,\n                          label: profiles[0].totalLabel,\n                          color: \"#999999\",\n                          formatter: (w) => {\n                            return w.globals.seriesTotals.reduce((a, b) => { return a + b; }, 0);\n                          }\n                        }\n                      }\n                    }\n                 }\n               },\n               legend: {\n                 offsetY: 25,\n                 offsetX:0\n                },\n               markers: {\n                   width: 10,\n                   height: 10,\n                   colors: ['#063760', '#E91E63', '#9C27B0']\n               },\n               itemMargin: {\n                   horizontal: 10\n              },\n              dataLabels: {\n                enabled: false\n              }\n      },\n      series: profiles[0].data.map((x)=>{return x.value})\n    }\n  }\n\n  componentDidMount(){\n    fetch(`./profiles.json`, {\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n\n    })\n    .then((response) => response.json())\n    .then((profiles) => this.setState({ profiles: profiles }));\n  }\n\n  render() {\n    const { profiles } = this.state;\n    console.log(this.state.profiles.profiles);\n    return !profiles.length ?\n      <h2 className='tc'>Loading Charts...</h2> :\n      (\n      <div className=\"App\">\n        <h2 className='tc'>Donut Chart Cards</h2>\n        <Paper elevation={10} className=\"pie\">\n          <div className='ma3 flex justify-between'>\n            <h2>{profiles.profiles[0].title}</h2>\n            <CloneBtn />\n          </div>\n          <div style={{ height: \"auto\", width: \"auto\"}}>\n            <ErrorBoundry>\n              <ApexChart\n                options={this.state.options}\n                series={this.state.series}\n                type=\"donut\"\n                width='400'\n              />\n            </ErrorBoundry>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}